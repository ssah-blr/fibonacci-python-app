trigger:
- main  # Replace 'main' with your branch name if different

stages:
- stage: Lint
  displayName: "Code Linting"
  jobs:
  - job: LintJob
    displayName: "Run Lint Checks"
    pool:
      name: 'mac-self'
    steps:
    - script: |
        echo "Creating virtual environment..."
        python3 -m venv venv  # Create a virtual environment
        source venv/bin/activate  # Activate the virtual environment

        echo "Upgrading pip..."
        python3 -m pip install --upgrade pip  # Upgrade pip inside the venv
        
        echo "Installing pylint..."
        pip install pylint  # Install pylint inside the venv
      displayName: "Set up and Install pylint"

    - script: |
        echo "Running lint checks..."
        source venv/bin/activate  # Activate the virtual environment
        pylint --fail-under=0 $(System.DefaultWorkingDirectory)/app  # Run pylint on your source code
      displayName: "Python Lint Check"

- stage: SecurityCheck
  displayName: "Security Check"
  dependsOn: Lint
  jobs:
  - job: SecurityCheckJob
    displayName: "Run Security Checks"
    pool:
      name: 'mac-self'
    steps:
    - script: |
        echo "Creating virtual environment..."
        python3 -m venv venv  # Create a virtual environment
        source venv/bin/activate  # Activate the virtual environment

        echo "Upgrading pip..."
        python3 -m pip install --upgrade pip  # Upgrade pip inside the venv
        
        echo "Installing security tools..."
        pip install bandit safety  # Install security tools inside the venv

        echo "Running security checks..."
        bandit -r $(System.DefaultWorkingDirectory)/app
        safety check --ignore 70612  # Ensure a requirements.txt or pipfile.lock exists
      displayName: "Application Security Check"

- stage: BuildAndPush
  displayName: "Build and Push Docker Image"
  dependsOn: SecurityCheck
  jobs:
  - job: DockerBuildPushJob
    displayName: "Build and Push Docker Image"
    pool:
      name: 'mac-self'
    variables:
    - group: DockerCredentials  # Reference the variable group
    - name: DOCKER_REGISTRY
      value: 'docker.io'
    - name: DOCKER_REPO
      value: 'ssahblr/python-app'
    steps:
    - task: Docker@2
      displayName: Log in to Docker registry
      inputs:
        containerRegistry: 'Docker-service-conn' # The name of your service connection
        command: 'login'

    - task: Docker@2
      displayName: "Build Docker image"
      inputs:
        command: build
        Dockerfile: Dockerfile
        containerRegistry: 'Docker-service-conn'
        repository: $(DOCKER_REPO)
        tags: |
          latest
          $(Build.BuildId)

    - task: Docker@2
      displayName: "Push Docker image"
      inputs:
        command: push
        containerRegistry: 'Docker-service-conn'
        repository: $(DOCKER_REPO)
        tags: |
          latest
          $(Build.BuildId)

- stage: ImageScan
  displayName: "Docker Image Scan"
  dependsOn: BuildAndPush
  jobs:
  - job: ImageScanJob
    displayName: "Run Docker Image Security Scan"
    pool:
      name: 'mac-self'
    steps:
    - script: |
        echo "Installing Trivy..."
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
        echo "Running Docker image scan..."
        ./trivy image $(DOCKER_REGISTRY)/$(DOCKER_REPO):$(Build.BuildId)
      displayName: "Docker Image Security Scan"
